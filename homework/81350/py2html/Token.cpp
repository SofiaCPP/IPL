#include "Token.h"
#include<unordered_map>

std::unordered_map<std::string, TokenType> keywords = {
    {"False", TokenType::False},
    {"True", TokenType::True},
    {"None", TokenType::None},
    {"and", TokenType::And},
    {"as", TokenType::As},
    {"assert", TokenType::Assert},
    {"break", TokenType::Break},
    {"class", TokenType::Class},
    {"continue", TokenType::Continue},
    {"def", TokenType::Def},
    {"del", TokenType::Del},
    {"elif", TokenType::Elif},
    {"else", TokenType::Else},
    {"except", TokenType::Except},
    {"finally", TokenType::Finally},
    {"for", TokenType::For},
    {"from", TokenType::From},
    {"global", TokenType::Global},
    {"if", TokenType::If},
    {"import", TokenType::Import},
    {"in", TokenType::In},
    {"is", TokenType::Is},
    {"lambda", TokenType::Lambda},
    {"nonlocal", TokenType::Nonlocal},
    {"not", TokenType::Not},
    {"or", TokenType::Or},
    {"pass", TokenType::Pass},
    {"print", TokenType::Print},
    {"raise", TokenType::Raise},
    {"return", TokenType::Return},
    {"try", TokenType::Try},
    {"while", TokenType::While},
    {"with", TokenType::With},
    {"yield", TokenType::Yield}
};
